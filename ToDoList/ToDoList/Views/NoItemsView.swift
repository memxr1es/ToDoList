//
//  NoItemsView.swift
//  ToDoList
//
//  Created by –ù–∏–∫–∏—Ç–∞ –ö–æ—Ç–æ–≤ on 04.09.2023.
//

import SwiftUI

struct NoItemsView: View {
    
    @State var animate: Bool = false
    let secondaryAccentColor = Color("SecondaryAccentColor")
    let quotes: [String] = [
        "–ï—Å–ª–∏ –≤—ã –º–æ–∂–µ—Ç–µ –º–µ—á—Ç–∞—Ç—å –æ–± —ç—Ç–æ–º, –≤—ã –º–æ–∂–µ—Ç–µ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å.",
        "–£—Å–µ—Ä–¥–Ω–æ —Ä–∞–±–æ—Ç–∞–π—Ç–µ, –º–µ—á—Ç–∞–π—Ç–µ –ø–æ-–∫—Ä—É–ø–Ω–æ–º—É.",
        "–ù–µ –∂–¥–∏—Ç–µ. –í—Ä–µ–º—è –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –±—É–¥–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–º.",
        "–ú–æ—Ç–∏–≤–∞—Ü–∏—è - —ç—Ç–æ —Ç–æ, —á—Ç–æ –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç –≤–∞—Å –Ω–∞—á–∞—Ç—å. –ü—Ä–∏–≤—ã—á–∫–∞ - —ç—Ç–æ —Ç–æ, —á—Ç–æ –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç –≤–∞—Å –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å.",
        "–ò–∑–º–µ–Ω–∏ —Å–≤–æ–∏ –º—ã—Å–ª–∏ –∏ —Ç—ã –∏–∑–º–µ–Ω–∏—à—å –º–∏—Ä.",
        "–ù–µ—É–¥–∞—á–∞ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –æ–¥–æ–ª–µ–µ—Ç –º–µ–Ω—è, –µ—Å–ª–∏ –º–æ—è —Ä–µ—à–∏–º–æ—Å—Ç—å –¥–æ–±–∏—Ç—å—Å—è —É—Å–ø–µ—Ö–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–∏–ª—å–Ω–∞.",
        "–£–º - —ç—Ç–æ –≤—Å–µ. –í—ã —Å—Ç–∞–Ω–æ–≤–∏—Ç–µ—Å—å —Ç–µ–º, –æ —á–µ–º –¥—É–º–∞–µ—Ç–µ.",
        "–ë—É–¥—å —Å–∫—Ä–æ–º–Ω—ã–º. –ë—É–¥—å –≥–æ–ª–æ–¥–Ω—ã–º. –ò –≤—Å–µ–≥–¥–∞ –±—É–¥—å —Å–∞–º—ã–º —É—Å–µ—Ä–¥–Ω—ã–º –≤ –∫–æ–º–Ω–∞—Ç–µ.",
        "–í–∞—à–µ –≤—Ä–µ–º—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ, –Ω–µ —Ç—Ä–∞—Ç—å—Ç–µ –µ–≥–æ –Ω–∞ —á—É–∂—É—é –∂–∏–∑–Ω—å.",
        "–£—Å–ø–µ—à–Ω—ã–µ –ª—é–¥–∏ –¥–µ–ª–∞—é—Ç —Ç–æ, —á—Ç–æ –Ω–µ—É—Å–ø–µ—à–Ω—ã–µ –ª—é–¥–∏ –Ω–µ —Ö–æ—Ç—è—Ç –¥–µ–ª–∞—Ç—å. –ù–µ –∂–µ–ª–∞–π, —á—Ç–æ–±—ã –±—ã–ª–æ –ª–µ–≥—á–µ, –∂–µ–ª–∞–π —Å—Ç–∞—Ç—å –ª—É—á—à–µ.",
    ]
    let index: Int = Int.random(in: 0...9)
    
    var body: some View {
        ScrollView {
            VStack(spacing: 10) {
                Group {
                    Text("–ù–µ—Ç –∑–∞–¥–∞—á...")
                        .font(.title)
                        .fontWeight(.semibold)
                    Text(quotes[index])
                        .padding(.bottom, 20)
                }
                .foregroundColor(.secondary)
                
                NavigationLink {
                    AddView()
                } label: {
                    Text("–î–æ–±–∞–≤—å —á—Ç–æ-—Ç–æ ü•π")
                        .foregroundColor(.white)
                        .font(.headline)
                        .frame(height: 50)
                        .frame(maxWidth: .infinity)
                        .background(animate ? secondaryAccentColor : .accentColor)
                        .cornerRadius(10)
                }
                .padding(.horizontal, animate ? 20 : 50)
                .shadow(
                    color: animate ? Color.red.opacity(0.7) : Color.accentColor.opacity(0.7),
                    radius: animate ? 30 : 10,
                    x: 0,
                    y: animate ? 50 : 30
                )
                .scaleEffect(animate ? 1.1 : 1.0)
                .offset(y: animate ? -7 : 0)
            }
            .frame(maxWidth: 400)
            .multilineTextAlignment(.center)
            .padding(40)
            .onAppear(perform: addAnimation)
        }
        .frame(maxWidth: .infinity, maxHeight: .infinity)
    }
    
    func addAnimation() {
        guard !animate else { return }
        DispatchQueue.main.asyncAfter(deadline: .now() + 1.5) {
            withAnimation(
                Animation
                    .easeInOut(duration: 2.0)
                    .repeatForever()
            ) {
                animate.toggle()
            }
        }
    }
    
}

struct NoItemsView_Previews: PreviewProvider {
    static var previews: some View {
        NavigationView {
            NoItemsView()
                .navigationTitle("Title")
        }
    }
}
